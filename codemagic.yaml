workflows:
  # Simplified workflow specifically for AltStore distribution (no code signing)
  altstore-build:
    name: NutriLens AltStore Build (Unsigned)
    instance_type: mac_mini_m1
    environment:
      node: latest
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install npm dependencies
        script: |
          npm ci
      
      - name: Install Ionic CLI
        script: |
          npm install -g @ionic/cli
      
      - name: Build web app
        script: |
          npm run build
      
      - name: Setup Capacitor
        script: |
          # Make sure the iOS platform is added
          npx cap add ios || true
          npx cap sync ios
      
      - name: Install Codemagic CLI tools
        script: |
          pip3 install codemagic-cli-tools
      
      - name: Create unsigned IPA
        script: |
          # Navigate to the iOS project directory
          cd ios/App
          
          # Create export options plist for development (no signing)
          cat > exportOptions.plist << EOL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key>
            <string>development</string>
            <key>compileBitcode</key>
            <false/>
            <key>signingStyle</key>
            <string>manual</string>
            <key>stripSwiftSymbols</key>
            <true/>
            <key>thinning</key>
            <string>&lt;none&gt;</string>
          </dict>
          </plist>
          EOL
          
          # Build the project without codesigning
          xcode-project build-ipa \
            --workspace App.xcworkspace \
            --scheme App \
            --config Debug \
            --no-codesign \
            --output-path $CM_BUILD_DIR/build/ios/App.ipa
          
          # Verify that the IPA was created
          ls -la $CM_BUILD_DIR/build/ios/App.ipa || echo "IPA not created"
      
      # Fallback approach if xcode-project build-ipa doesn't work
      - name: Fallback - Build Archive
        script: |
          if [ ! -f "$CM_BUILD_DIR/build/ios/App.ipa" ]; then
            echo "Primary build failed, trying archive method..."
            cd ios/App
            xcodebuild \
              -workspace App.xcworkspace \
              -scheme App \
              -configuration Debug \
              -archivePath $CM_BUILD_DIR/build/App.xcarchive \
              archive \
              CODE_SIGN_IDENTITY="" \
              CODE_SIGNING_REQUIRED=NO \
              CODE_SIGNING_ALLOWED=NO
            
            # Export the archive as IPA
            xcodebuild \
              -exportArchive \
              -archivePath $CM_BUILD_DIR/build/App.xcarchive \
              -exportPath $CM_BUILD_DIR/build/ios \
              -exportOptionsPlist exportOptions.plist || true
          fi
      
      # Second fallback using xcrun
      - name: Fallback - Package with xcrun
        script: |
          if [ ! -f "$CM_BUILD_DIR/build/ios/App.ipa" ]; then
            echo "Archive method failed, trying xcrun method..."
            if [ -d "$CM_BUILD_DIR/build/App.xcarchive/Products/Applications/App.app" ]; then
              mkdir -p $CM_BUILD_DIR/build/ios/Payload
              cp -r $CM_BUILD_DIR/build/App.xcarchive/Products/Applications/App.app $CM_BUILD_DIR/build/ios/Payload/
              cd $CM_BUILD_DIR/build/ios
              zip -r App.ipa Payload
              ls -la App.ipa
            else
              echo "No app found in archive to package"
            fi
          fi
      
      # Create info about the build for debugging
      - name: Output build info
        script: |
          echo "=== Build Output Files ==="
          find $CM_BUILD_DIR/build -type f -name "*.ipa" -o -name "*.app" | sort
          
          if [ -d "$CM_BUILD_DIR/build/App.xcarchive" ]; then
            echo "=== Archive Info ==="
            cat $CM_BUILD_DIR/build/App.xcarchive/Info.plist || echo "No Info.plist found"
          fi
          
          echo "=== Final IPA Status ==="
          ls -la $CM_BUILD_DIR/build/ios/App.ipa || echo "IPA not found in expected location"
    artifacts:
      - $CM_BUILD_DIR/build/ios/*.ipa
      - $CM_BUILD_DIR/build/ios/App.ipa
      - $CM_BUILD_DIR/build/**/*.log
      - $CM_BUILD_DIR/build/App.xcarchive/Info.plist
      - $CM_BUILD_DIR/build/ios/ExportOptions.plist